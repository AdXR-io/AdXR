// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-xros1.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name adxr_framework_v2
import Combine
import Swift
import SwiftUI
import _AVKit_SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import adxr_framework_v2
@_hasMissingDesignatedInitializers public class ADXR : Combine.ObservableObject {
  public static let shared: adxr_framework_v2.ADXR
  @Combine.Published @_projectedValueProperty($isShowingAd) public var isShowingAd: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $isShowingAd: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($showPlayerView) public var showPlayerView: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $showPlayerView: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($playerModel) public var playerModel: adxr_framework_v2.PlayerModel {
    get
  }
  public var $playerModel: Combine.Published<adxr_framework_v2.PlayerModel>.Publisher {
    get
  }
  #if compiler(>=5.3) && $AsyncAwait
  public func getAd(urlString: Swift.String, apiKey: Swift.String, secretKey: Swift.String) async throws
  #endif
  public func reset()
  public func applyOverlay<T>(to view: T) -> some SwiftUI.View where T : SwiftUI.View
  
  public typealias ObjectWillChangePublisher = Combine.ObservableObjectPublisher
  @objc deinit
}
public enum ADXRError : Swift.Error {
  case invalidCredentials
  case invalidURL
  case invalidResponse
  public static func == (a: adxr_framework_v2.ADXRError, b: adxr_framework_v2.ADXRError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public class PlayerModel : Combine.ObservableObject {
  @Combine.Published @_projectedValueProperty($player) public var player: AVFoundation.AVPlayer? {
    get
  }
  public var $player: Combine.Published<AVFoundation.AVPlayer?>.Publisher {
    get
  }
  @Combine.Published @_projectedValueProperty($isPlaying) public var isPlaying: Swift.Bool {
    get
  }
  public var $isPlaying: Combine.Published<Swift.Bool>.Publisher {
    get
  }
  @Combine.Published @_projectedValueProperty($showPlayerView) public var showPlayerView: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $showPlayerView: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($showCustomInfo) public var showCustomInfo: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $showCustomInfo: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  public init()
  public func loadVideo(url: Foundation.URL)
  public func play()
  public func pause()
  public func reset()
  public func seekToBeginning()
  public typealias ObjectWillChangePublisher = Combine.ObservableObjectPublisher
  @objc deinit
}
@_Concurrency.MainActor(unsafe) public struct PlayerView : SwiftUI.UIViewControllerRepresentable {
  @_Concurrency.MainActor(unsafe) public init(playerModel: adxr_framework_v2.PlayerModel, adManager: adxr_framework_v2.ADXR)
  @_Concurrency.MainActor(unsafe) public func makeUIViewController(context: adxr_framework_v2.PlayerView.Context) -> AVKit.AVPlayerViewController
  @_Concurrency.MainActor(unsafe) public func updateUIViewController(_ uiViewController: AVKit.AVPlayerViewController, context: adxr_framework_v2.PlayerView.Context)
  @_Concurrency.MainActor(unsafe) public func makeCoordinator() -> adxr_framework_v2.PlayerView.Coordinator
  @objc @_hasMissingDesignatedInitializers public class Coordinator : ObjectiveC.NSObject, AVKit.AVPlayerViewControllerDelegate {
    public func playerViewControllerWillDismiss(_ playerViewController: AVKit.AVPlayerViewController)
    @objc public func playerViewControllerDidStopPictureInPicture(_ playerViewController: AVKit.AVPlayerViewController)
    @objc deinit
  }
  public typealias Body = Swift.Never
  public typealias UIViewControllerType = AVKit.AVPlayerViewController
}
public struct CustomInfoView : SwiftUI.View {
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s17adxr_framework_v214CustomInfoViewV4bodyQrvp", 0) __
}
public struct ReportOptionsView : SwiftUI.View {
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s17adxr_framework_v217ReportOptionsViewV4bodyQrvp", 0) __
}
@_Concurrency.MainActor(unsafe) public struct ADXROverlay : SwiftUI.ViewModifier {
  @_Concurrency.MainActor(unsafe) public func body(content: adxr_framework_v2.ADXROverlay.Content) -> some SwiftUI.View
  
  public typealias Body = @_opaqueReturnTypeOf("$s17adxr_framework_v211ADXROverlayV4body7contentQr7SwiftUI21_ViewModifier_ContentVyACG_tF", 0) __
}
@_Concurrency.MainActor(unsafe) public struct ADXRViewModifier : SwiftUI.ViewModifier {
  @_Concurrency.MainActor(unsafe) public init(adManager: adxr_framework_v2.ADXR = .shared)
  @_Concurrency.MainActor(unsafe) public func body(content: adxr_framework_v2.ADXRViewModifier.Content) -> some SwiftUI.View
  
  public typealias Body = @_opaqueReturnTypeOf("$s17adxr_framework_v216ADXRViewModifierV4body7contentQr7SwiftUI05_ViewE8_ContentVyACG_tF", 0) __
}
extension SwiftUI.View {
  public func withADXR() -> some SwiftUI.View
  
}
extension adxr_framework_v2.ADXRError : Swift.Equatable {}
extension adxr_framework_v2.ADXRError : Swift.Hashable {}
